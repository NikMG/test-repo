{"version":3,"sources":["context/AuthContext.js","hooks/auth.hook.js","pages/AuthPage.jsx","hooks/message.hook.js","hooks/https.hook.js","pages/LinksPage.jsx","App.js","routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","storageName","AuthPage","message","useCallback","text","window","M","toast","html","useState","loading","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","clearError","useHttp","auth","useContext","email","password","form","setForm","useEffect","updateTextFields","changeHandler","event","target","name","value","registerHandler","loginHandler","className","placeholder","id","type","onChange","htmlFor","style","marginRight","onClick","disabled","LinksPage","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","exact","path","element","to","UseRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2698d5.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null, \n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n});","import { useCallback, useState, useEffect } from \"react\";\n\nconst storageName = 'userData';\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken);\n        setUserId(id);\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }));\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem(storageName);\n    }, []);\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName));\n        \n        if (data && data.token) {\n            login(data.token, data.userId);\n        }\n    }, [login]);\n\n    return {login, logout, userId, token};\n}","import React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHttp } from \"../hooks/https.hook\";\nimport { useMessage } from \"../hooks/message.hook\";\n\nexport const AuthPage = () => {\n    const message = useMessage();\n    const { loading, request, error, clearError } = useHttp();\n    const auth = useContext(AuthContext);\n    const [form, setForm] = useState({\n        email: '', password: ''\n    });\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    const changeHandler = (event) => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('/api/auth/register', 'POST', { ...form });\n            message(data.message);\n        } catch (e) {\n\n        }\n    }\n\n    const loginHandler = async () => {\n        try {\n            const data = await request('/api/auth/login', 'POST', { ...form });\n            auth.login(data.token, data.userId);\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Test project</h1>\n                <div className=\"card blue-grey darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Auth</span>\n                        <div>\n\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Put email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                            </div>\n\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Put in password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"password\">Type in Password</label>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn yellow darken-4\"\n                            style={{ marginRight: 10 }}\n                            onClick={loginHandler}\n                            disabled={loading}\n                        >\n                            Login\n                        </button>\n                        <button\n                            className=\"btn grey lighten-1 black-text\"\n                            onClick={registerHandler}\n                            disabled={loading}\n                        >Register\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useCallback } from \"react\";\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if (window.M && text) {\n            window.M.toast({html: text});\n        }\n    }, []);\n}","import { useCallback, useState } from \"react\"\n\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true);\n        try {\n            if (body) {\n                \n                body = JSON.stringify(body);\n                headers['Content-Type'] = 'application/json';\n            }\n\n            const response = await fetch(url, {\n                method, body, headers\n            });\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Something Wrong OOOOOpsy')\n            }\n\n            setLoading(false);\n            return data;\n        } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return { loading, request, error, clearError }\n} ","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const LinksPage = () => {\n    const auth = useContext(AuthContext);\n\n    const logoutHandler = () => {\n        auth.logout();\n    }   \n\n    return (\n        <div>\n            <h1>Links Page</h1>\n            <button\n            onClick={logoutHandler}\n            >Logout</button>\n        </div>\n    );\n}","import 'materialize-css';\nimport { AuthContext } from './context/AuthContext';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { useAuth } from './hooks/auth.hook';\nimport { UseRoutes } from './routes';\n\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  const isAuthenticated = !!token;\n  const routes = UseRoutes(isAuthenticated);\n  return (\n    <AuthContext.Provider value={{\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout,\n      isAuthenticated: isAuthenticated\n    }}>\n      <Router>\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { Routes, Route, Navigate } from \"react-router-dom\"\nimport { AuthPage } from \"./pages/AuthPage\"\nimport { LinksPage } from \"./pages/LinksPage\"\n\n\nexport const UseRoutes = isAuthenticated => {\n    if (isAuthenticated) {\n        return (\n            <Routes>\n                <Route exact path=\"/links\" element={<LinksPage />} />\n                <Route path=\"/*\" element={<Navigate to=\"/links\" />} />\n            </Routes>\n        )\n    }\n\n    return (\n        <Routes>\n            <Route exact path=\"/\" element={<AuthPage />} />\n            <Route path=\"/*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}